const { Keyboard } = require('vk-io');
function timeKeyBoard(times) {
    let keyboard = Keyboard.builder();
    times.forEach((item, idx) => {
        id = item.split('').reverse()[0]
        if ((idx + 1) % 5 == 0) {
            keyboard.textButton({
                label: item,
                color: id % 5 == 0 ? Keyboard.PRIMARY_COLOR : Keyboard.SECONDARY_COLOR
            })
            keyboard.row()
        } else {
            keyboard.textButton({
                label: item,
                color: id % 5 == 0 ? Keyboard.PRIMARY_COLOR : Keyboard.SECONDARY_COLOR
            })
        }

    });
    keyboard.oneTime()
    return keyboard
}
var startKeyBoard = Keyboard.builder()
    .textButton({
        label: '–ö–æ—Ñ–µ ‚òï',
    })
    .textButton({
        label: '–í—ã–ø–µ—á–∫–∞ ü•ü',
    })
    .row()
    .textButton({
        label: '–ß–∞–π',
    })
    .textButton({
        label: '–ú–∞–Ω—Ç—ã üç≤',
    })
    .row()
    .textButton({
        label: '–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –∫–æ–∫—Ç–µ–π–ª—å ü•õ',
        color: Keyboard.POSITIVE_COLOR
    })
    .oneTime()
    .inline()

var mainKeyBoard = Keyboard.builder()
    .textButton({
        label: '–ö–æ—Ñ–µ ‚òï',
    })
    .textButton({
        label: '–í—ã–ø–µ—á–∫–∞ ü•ü',
    })
    .row()
    .textButton({
        label: '–ß–∞–π',
    })
    .textButton({
        label: '–ú–∞–Ω—Ç—ã üç≤',
    })
    .row()
    .textButton({
        label: '–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –∫–æ–∫—Ç–µ–π–ª—å ü•õ',
        color: Keyboard.POSITIVE_COLOR
    })
    .row()
    .textButton({
        label: '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑',
        color: Keyboard.PRIMARY_COLOR
    })
    .row()
    .textButton({
        label: '–í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è',
        color: Keyboard.POSITIVE_COLOR
    })
    .row()
    .textButton({
        label: '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑',
        color: Keyboard.NEGATIVE_COLOR
    })
    .oneTime()
    .inline()

var teaKeyBoard = Keyboard.builder()
    .textButton({
        label: '–ß–∞–π –∑–µ–ª–µ–Ω—ã–π - 30‚ÇΩ',
        color: Keyboard.PRIMARY_COLOR
    })
    .row()
    .textButton({
        label: '–ß–∞–π —Ñ—Ä—É–∫—Ç–æ–≤—ã–π - 30‚ÇΩ',
    })
    .row()
    .textButton({
        label: '–ß–∞–π —è–≥–æ–¥–Ω—ã–π - 30‚ÇΩ',
    })
    .oneTime()
    .inline()

var mantiKeyBoard = Keyboard.builder()
    .textButton({
        label: '–ü–æ—Ä—Ü–∏—è –º–∞–Ω—Ç - 150‚ÇΩ',
    })
    .row()
    .textButton({
        label: '–î–≤–µ –ø–æ—Ä—Ü–∏–∏ –º–∞–Ω—Ç - 300‚ÇΩ',
        color: Keyboard.PRIMARY_COLOR
    })
    .row()
    .textButton({
        label: '–¢—Ä–∏ –ø–æ—Ä—Ü–∏–∏ –º–∞–Ω—Ç - 450‚ÇΩ',
    })
    .oneTime()
    .inline()

var newOrderKeyBoard = Keyboard.builder()
    .textButton({
        label: '–û–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑!',
        color: Keyboard.POSITIVE_COLOR
    })
    .row()
    .textButton({
        label: '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑',
        color: Keyboard.NEGATIVE_COLOR
    })
    .oneTime()
    .inline()

var mistakeKeyBoard = Keyboard.builder()
    .textButton({
        label: '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑!',
        color: Keyboard.POSITIVE_COLOR
    })
    .oneTime()
    .inline()


module.exports.mantiKeyBoard = mantiKeyBoard;
module.exports.teaKeyBoard = teaKeyBoard;
module.exports.startKeyBoard = startKeyBoard;
module.exports.mainKeyBoard = mainKeyBoard;
module.exports.timeKeyBoard = timeKeyBoard;
module.exports.newOrderKeyBoard = newOrderKeyBoard;
module.exports.mistakeKeyBoard = mistakeKeyBoard;